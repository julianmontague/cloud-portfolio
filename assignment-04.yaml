heat_template_version: 2021-04-16

description: >
  Deploys an Ubuntu and a Windows server, each on their own separate
  networks with floating IP addresses. Their security groups are setup
  to allow remote access (SSH and RDP respectively) and incoming
  connections on port 80 (HTTP; not HTTPS!).

parameters:
  ubuntu_key_name:
    type: string
    label: Ubuntu Key Name
    description: Name of key-pair to be used for Ubuntu instance
  ubuntu_flavor:
    type: string
    label: Ubuntu Instance Type
    description: Type of instance (flavor) to be used for Ubuntu instance
    default: gx2.1c4r
    constraints:
      # Our account has a limit of 2 vCPUs, so each of the two instances can only have one.
      - allowed_values: [ gx2.1c1r, gx2.1c2r, gx2.1c3r, gx2.1c4r ]
        description: Value must be one of gx2.1c1r, gx2.1c2r, gx2.1c3r, or gx2.1c4r.
  ubuntu_image:
    type: string
    label: Ubuntu Image ID
    description: Image to be used for Ubuntu instance
  windows_key_name:
    type: string
    label: Windows Key Name
    description: Name of key-pair to be used for Windows instance
  windows_flavor:
    type: string
    label: Windows Instance Type
    description: Type of instance (flavor) to be used for Windows instance
    default: gx2.1c4r
    constraints:
      # Our account has a limit of 2 vCPUs, so each of the two instances can only have one.
      - allowed_values: [ gx2.1c1r, gx2.1c2r, gx2.1c3r, gx2.1c4r ]
        description: Value must be one of gx2.1c1r, gx2.1c2r, gx2.1c3r, or gx2.1c4r.
  windows_image:
    type: string
    label: Windows Image ID
    description: Image to be used for Windows instance

resources:
  ping_secgroup:
    type: OS::Neutron::SecurityGroup
    properties:
      name: pingable
      description: Allows pings
      rules:
        - protocol: icmp
          remote_ip_prefix: 0.0.0.0/0
  ubuntu_server:
    type: OS::Nova::Server
    properties:
      name: UbuntuWebServer
      flavor: { get_param: ubuntu_flavor }
      image: { get_param: ubuntu_image }
      security_groups:
        - { get_resource: ping_secgroup }
        - { get_resource: ubuntu_secgroup }
      networks:
        - network: { get_resource: ubuntu_net }
      key_name: { get_param: ubuntu_key_name }
      # availability_zone isn't required but I'm not sure what happens without
  ubuntu_secgroup:
    type: OS::Neutron::SecurityGroup
    properties:
      name: ubuntu-webserver
      description: Allows SSH and HTTP
      rules:
        - protocol: tcp
          remote_ip_prefix: 0.0.0.0/0
          port_range_min: 22
          port_range_max: 22
        - protocol: tcp
          remote_ip_prefix: 0.0.0.0/0
          port_range_min: 80
          port_range_max: 80
  ubuntu_net:
    type: OS::Neutron::Net
  ubuntu_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: ubuntu_net }
      cidr: 192.168.0.0/24
  ubuntu_router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: ntnu-internal
  ubuntu_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: ubuntu_router }
      subnet: { get_resource: ubuntu_subnet }
  ubuntu_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: ntnu-internal
  ubuntu_floating_ip_association:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: ubuntu_floating_ip }
      port_id: { get_attr: [ubuntu_server, addresses, { get_resource: ubuntu_net }, 0, port] }
  windows_server:
    type: OS::Nova::Server
    properties:
      name: WindowsWebServer
      flavor: { get_param: windows_flavor }
      image: { get_param: windows_image }
      security_groups:
        - { get_resource: ping_secgroup }
        - { get_resource: windows_secgroup }
      networks:
        - network: { get_resource: windows_net }
      key_name: { get_param: windows_key_name }
      # availability_zone isn't required but I'm not sure what happens without
  windows_secgroup:
    type: OS::Neutron::SecurityGroup
    properties:
      name: windows-webserver
      description: Allows RDP and HTTP
      rules:
        - protocol: tcp
          remote_ip_prefix: 0.0.0.0/0
          port_range_min: 3389
          port_range_max: 3389
        - protocol: tcp
          remote_ip_prefix: 0.0.0.0/0
          port_range_min: 80
          port_range_max: 80
  windows_net:
    type: OS::Neutron::Net
  windows_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: windows_net }
      cidr: 192.168.0.0/24
  windows_router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: ntnu-internal
  windows_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: windows_router }
      subnet: { get_resource: windows_subnet }
  windows_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: ntnu-internal
  windows_floating_ip_association:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: windows_floating_ip }
      port_id: { get_attr: [windows_server, addresses, { get_resource: windows_net }, 0, port] }
